<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="appFileNameString" xml:space="preserve">
    <value>Keys</value>
  </data>
  <data name="appFolderNameString" xml:space="preserve">
    <value>SuotaPgp</value>
  </data>
  <data name="AppNotIdleString" xml:space="preserve">
    <value>Application is not idle.</value>
  </data>
  <data name="BlobJsonKey" xml:space="preserve">
    <value>blob</value>
  </data>
  <data name="BluetoothJsonKey" xml:space="preserve">
    <value>bluetooth</value>
  </data>
  <data name="ConnectingToBondedGoPlus" xml:space="preserve">
    <value>Connecting to Bonded Pokemon GO Plus.</value>
  </data>
  <data name="CrcError" xml:space="preserve">
    <value>Critical Error: CRC error, reverting changes.</value>
  </data>
  <data name="CriticalErrorTitle" xml:space="preserve">
    <value>Received Error from device</value>
  </data>
  <data name="DeviceJsonKey" xml:space="preserve">
    <value>device</value>
  </data>
  <data name="DialogMessageRequiredString" xml:space="preserve">
    <value>Dialog message required</value>
  </data>
  <data name="EnablingSuotaGoPlus" xml:space="preserve">
    <value>Enabling SUOTA on Pokemon GO Plus.</value>
  </data>
  <data name="ErrorReadingBlobKey" xml:space="preserve">
    <value>Error reading blob key. {0}. {1} tries left.</value>
  </data>
  <data name="ErrorReadingDeviceKey" xml:space="preserve">
    <value>Error reading device key. {0}. {1} tries left.</value>
  </data>
  <data name="ExpectedInvalidImageBankError" xml:space="preserve">
    <value>Expected "Invalid image bank" returned from device. Time to write the patch.</value>
  </data>
  <data name="FilesNotFoundString" xml:space="preserve">
    <value>No files found. Please make sure the firmware file is in the "{0}" folder.</value>
  </data>
  <data name="Finished" xml:space="preserve">
    <value>Finished.</value>
  </data>
  <data name="GoPlusDisconnectedReconnecting" xml:space="preserve">
    <value>Pokemon GO Plus automatically disconnected, reconnecting.</value>
  </data>
  <data name="InternalMemoryError" xml:space="preserve">
    <value>Internal Memory Error (Not enough space for Patch).</value>
  </data>
  <data name="InvalidImageBankError" xml:space="preserve">
    <value>"Invalid image bank" error returned from device.</value>
  </data>
  <data name="InvalidImageHeaderError" xml:space="preserve">
    <value>"Invalid Image header" error returned from device. Please ensure your firmware is valid.</value>
  </data>
  <data name="InvalidImageSizeError" xml:space="preserve">
    <value>Invalid Image Size returned. Please ensure your firmware is valid.</value>
  </data>
  <data name="InvalidProductHeaderError" xml:space="preserve">
    <value>Invalid Product Header returned. There is something wrong with your GO+ as this should never happen.</value>
  </data>
  <data name="LoadingFirmware" xml:space="preserve">
    <value>Loading Firmware</value>
  </data>
  <data name="NoPairedGoPlusFoundString" xml:space="preserve">
    <value>No paired Pokemon GO Plus found. Please make sure it's connected via Pokemon GO.</value>
  </data>
  <data name="OkString" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="PatchingValidFlag" xml:space="preserve">
    <value>Patching valid flag.</value>
  </data>
  <data name="PatchLengthError" xml:space="preserve">
    <value>Patch Length Error.</value>
  </data>
  <data name="PgpConnectErrorString" xml:space="preserve">
    <value>Error connecting to Pokemon GO Plus. {0}</value>
  </data>
  <data name="PgpConnectingString" xml:space="preserve">
    <value>Connecting to Pokemon GO Plus.</value>
  </data>
  <data name="PgpConnectSuccessString" xml:space="preserve">
    <value>Successfully connected to Pokemon GO Plus.</value>
  </data>
  <data name="PgpDiscovered" xml:space="preserve">
    <value>Device found {0} - {1}</value>
  </data>
  <data name="PgpFailedIntegrityError" xml:space="preserve">
    <value>Pokemon GO Plus failed integrity check. This isn't a problem since we patched the image header.</value>
  </data>
  <data name="PgpUnabletoConnectString" xml:space="preserve">
    <value>Unable to Connect to Pokemon GO Plus.</value>
  </data>
  <data name="ReceivedImgStarted" xml:space="preserve">
    <value>Received "SPOTAR_IMG_STARTED"</value>
  </data>
  <data name="ReceivedNotificationValue" xml:space="preserve">
    <value>Received value {0}</value>
  </data>
  <data name="RestoreCompleteMessageString" xml:space="preserve">
    <value>The device should automatically restart</value>
  </data>
  <data name="RestoreCompleteTitleString" xml:space="preserve">
    <value>Restore Complete</value>
  </data>
  <data name="RestoreResult" xml:space="preserve">
    <value>Restore result "{0}"</value>
  </data>
  <data name="SavedToString" xml:space="preserve">
    <value>Saved to "{0}"</value>
  </data>
  <data name="ScanStartString" xml:space="preserve">
    <value>Scanning for GO+ Devices.</value>
  </data>
  <data name="ScanStopString" xml:space="preserve">
    <value>Stopping scan for GO+ Devices</value>
  </data>
  <data name="SendingImageEnd" xml:space="preserve">
    <value>Sending Image End command.</value>
  </data>
  <data name="SettingMemType" xml:space="preserve">
    <value>Setting MemType to 0x{0}</value>
  </data>
  <data name="SpotaServiceRegister" xml:space="preserve">
    <value>Listening to SPOTA Service Status Characteristic.</value>
  </data>
  <data name="SpotaServiceUnregister" xml:space="preserve">
    <value>Unregistering from SPOTA Service Status. </value>
  </data>
  <data name="StorageInaccessibleString" xml:space="preserve">
    <value>Storage inaccessible. Please make sure that storage permissions are enabled.</value>
  </data>
  <data name="UnableToConnectToPgpString" xml:space="preserve">
    <value>Unable to connect to Pokemon GO Plus.</value>
  </data>
  <data name="UnableToGetDeviceInfoString" xml:space="preserve">
    <value>Unable to get keys.</value>
  </data>
  <data name="UnableToRestoreMessageString" xml:space="preserve">
    <value>Returned value: {0}.</value>
  </data>
  <data name="UnableToRestoreTitleString" xml:space="preserve">
    <value>Unable to restore.</value>
  </data>
  <data name="UpdateCompleteMessage" xml:space="preserve">
    <value>Please restart your Pokemon GO Plus if it doesn't show up.</value>
  </data>
  <data name="UpdateCompleteTitle" xml:space="preserve">
    <value>Update Complete.</value>
  </data>
  <data name="WipeSuccessful" xml:space="preserve">
    <value>Successfully wiped out corrupted image.</value>
  </data>
  <data name="WritingBlock" xml:space="preserve">
    <value>Writing block: {0}.</value>
  </data>
  <data name="WritingChunk" xml:space="preserve">
    <value>Writing block: {0} chunk: {1}.</value>
  </data>
  <data name="WritingCrc" xml:space="preserve">
    <value>Writing CRC.</value>
  </data>
  <data name="WritingGpio" xml:space="preserve">
    <value>Writing 0x{0} to GPIO Characteristic.</value>
  </data>
  <data name="WritingSpotaPatchLength" xml:space="preserve">
    <value>Writing {0} to SPOTA patch length.</value>
  </data>
  <data name="WritingToFileString" xml:space="preserve">
    <value>Writing to file "{0}".</value>
  </data>
</root>